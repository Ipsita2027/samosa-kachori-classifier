name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main # Trigger this workflow on pushes to your 'main' branch

env:
  # Define the Docker image name.
  # ghcr.io/<OWNER>/<REPO_NAME>
  # github.repository provides <OWNER>/<REPO_NAME> automatically
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required to checkout the repository code
      packages: write # Required to push packages (Docker images) to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        # This action logs into ghcr.io using the built-in GITHUB_TOKEN
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # The GitHub username that triggered the workflow
          password: ${{ secrets.GITHUB_TOKEN }} # The automatically generated token with package:write scope

      - name: Extract metadata (tags, labels) for Docker
        # This action generates useful Docker image tags based on Git information
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}} # Tags the image as 'latest' on the default branch (e.g., main)
            type=sha,format=long # Also tags with the full commit SHA
            # Add more tags as needed, e.g., type=semver,pattern={{version}} for releases

      - name: Build and push Docker image
        # This action builds your Dockerfile and pushes the image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: . # Specifies the build context (where your Dockerfile and app code are, usually repo root)
          push: true # Set to true to push the image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Uses the tags generated by the metadata action
          labels: ${{ steps.meta.outputs.labels }} # Uses labels generated by the metadata action

      - name: Get Docker Image URL
        # This step just outputs the URL for informational purposes
        run: |
          # The image URL typically follows this format: ghcr.io/<OWNER>/<REPO_NAME>:<TAG>
          # We'll use the 'latest' tag as an example if it's the default branch
          IMAGE_URL="${{ env.IMAGE_NAME }}:latest"
          
          # If you want the SHA-tagged image URL :
          # IMAGE_URL_SHA="${{ env.IMAGE_NAME }}@${{ steps.meta.outputs.digest }}"

          echo "Docker Image pushed to GHCR:"
          echo "  URL: $IMAGE_URL"
          echo "  (You can also find it in your GitHub repository's Packages section)"

          # If you need to pass this URL to a subsequent job, you can set it as an output:
          echo "docker_image_url=$IMAGE_URL" >> "$GITHUB_OUTPUT"
        id: get_image_url

    outputs:
      ghcr_image_url: ${{ steps.get_image_url.outputs.docker_image_url }}